/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ReposIndexRouteImport } from './routes/repos/index'
import { Route as ReposRepoIdIndexRouteImport } from './routes/repos/$repoId/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ReposIndexRoute = ReposIndexRouteImport.update({
  id: '/repos/',
  path: '/repos/',
  getParentRoute: () => rootRouteImport,
} as any)
const ReposRepoIdIndexRoute = ReposRepoIdIndexRouteImport.update({
  id: '/repos/$repoId/',
  path: '/repos/$repoId/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/repos': typeof ReposIndexRoute
  '/repos/$repoId': typeof ReposRepoIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/repos': typeof ReposIndexRoute
  '/repos/$repoId': typeof ReposRepoIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/repos/': typeof ReposIndexRoute
  '/repos/$repoId/': typeof ReposRepoIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/repos' | '/repos/$repoId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/repos' | '/repos/$repoId'
  id: '__root__' | '/' | '/repos/' | '/repos/$repoId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ReposIndexRoute: typeof ReposIndexRoute
  ReposRepoIdIndexRoute: typeof ReposRepoIdIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/repos/': {
      id: '/repos/'
      path: '/repos'
      fullPath: '/repos'
      preLoaderRoute: typeof ReposIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/repos/$repoId/': {
      id: '/repos/$repoId/'
      path: '/repos/$repoId'
      fullPath: '/repos/$repoId'
      preLoaderRoute: typeof ReposRepoIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ReposIndexRoute: ReposIndexRoute,
  ReposRepoIdIndexRoute: ReposRepoIdIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
